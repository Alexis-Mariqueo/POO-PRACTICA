##State

State es un patrón de diseño de comportamiento que permite a un objeto 
alterar su comportamiento cuando su estado interno cambia. 
Parece como si el objeto cambiara su clase.

##Idea o concepto
El patrón State sugiere que crees nuevas clases para todos los estados 
posibles de un objeto y extraigas todos los comportamientos específicos 
del estado para colocarlos dentro de esas clases.

#Estructura

1_ La clase Contexto almacena una referencia a uno de los objetos de 
estado concreto y le delega todo el trabajo específico del estado. 
El contexto se comunica con el objeto de estado a través de la interfaz 
de estado. El contexto expone un modificador (setter) para pasarle un 
nuevo objeto de estado.

2_ La interfaz Estado declara los métodos específicos del estado. 
Estos métodos deben tener sentido para todos los estados concretos, 
porque no querrás que uno de tus estados tenga métodos inútiles que 
nunca son invocados.

3_ Los Estados Concretos proporcionan sus propias implementaciones para 
los métodos específicos del estado. Para evitar la duplicación de código 
similar a través de varios estados, puedes incluir clases abstractas 
intermedias que encapsulen algún comportamiento común.
Los objetos de estado pueden almacenar una referencia inversa al objeto 
de contexto. A través de esta referencia, el estado puede extraer cualquier 
información requerida del objeto de contexto, así como iniciar transiciones 
de estado.

4_ Tanto el estado de contexto como el concreto pueden establecer el nuevo 
estado del contexto y realizar la transición de estado sustituyendo el 
objeto de estado vinculado al contexto.

